{"changed":true,"filter":false,"title":"chat.py","tooltip":"/.c9/xmen-chatbot/chat.py","value":"import streamlit as st\nimport time\nfrom PIL import Image\nimport os\n\nst.title(\"💬 AI SERVICE\")\n\n\nimage_path = '/home/ubuntu/environment/.c9/xmen-chatbot/BAGGAGE_20240307_093706_140005_SUPERVISOR_A_ud.jpg'\n\n\ndetection_results = {\n    \"index\": \"dsfdfsdf\",\n    \"UserID\": \"001\",\n    \"s3\": \"....\",\n    \"objects\": [\n        {\n            \"type\": \"SSD\",\n            \"position\": [2, 0, 0, 1],\n            \"amount\": 3\n        },\n        {\n            \"type\": \"USB\",\n            \"position\": [0, 0, 1, 0],\n            \"amount\": 1\n        }\n    ]\n}\n\n\n# AWS \ns3 = boto3.client('s3')\ndynamodb = boto3.client('dynamodb')\nsagemaker_runtime = boto3.client('runtime.sagemaker')\n\ndef get_position_text(positions):\n    position_texts = []\n    if positions[0] > 0:\n        position_texts.append(f\"왼쪽 상단에 {positions[0]}개\")\n    if positions[1] > 0:\n        position_texts.append(f\"오른쪽 상단에 {positions[1]}개\")\n    if positions[2] > 0:\n        position_texts.append(f\"왼쪽 하단에 {positions[2]}개\")\n    if positions[3] > 0:\n        position_texts.append(f\"오른쪽 하단에 {positions[3]}개\")\n    return \", \".join(position_texts)\n\n# 탐지됐을 때\ndef generate_detection_message(detection_results):\n    total_objects = sum([obj[\"amount\"] for obj in detection_results[\"objects\"]])\n    detection_message = f\"총 {total_objects}개의 물품이 탐지되었습니다.\\n\"\n    for obj in detection_results[\"objects\"]:\n        detection_message += f\"<br>{obj['type']}가 {obj['amount']}개 탐지되었습니다.\\n\"\n        position_text = get_position_text(obj[\"position\"])\n        detection_message += f\"<br>{obj['type']}는 {position_text}로 예상됩니다.\\n\"\n    return detection_message\n\n# 탐지 안 됐을 때\ndef handle_no_detection():\n    st.session_state.messages.append({\"role\": \"user\", \"content\": \"No Detection\"})\n    st.session_state.messages.append(\n        {\"role\": \"assistant\", \"content\": \"물체가 제대로 탐지되지 않았습니다. 가방을 흔들어서 다시 올려주세요.\"}\n    )\n    st.chat_message(\"assistant\").write(\"물체가 제대로 탐지되지 않았습니다. 가방을 흔들어서 다시 올려주세요.\")\n    st.session_state.stage = 3\n    st.rerun()\n\n# 탐지 됐을 때\ndef handle_objects_detected():\n    st.session_state.messages.append({\"role\": \"user\", \"content\": \"Objects Detected\"})\n    st.session_state.messages.append({\"role\": \"assistant\", \"content\": \"스캔이 완료되었습니다. 탐지된 물체를 확인합니다...\"})\n    st.chat_message(\"assistant\").write(\"스캔이 완료되었습니다. 탐지된 물체를 확인합니다...\")\n    with st.spinner(\"확인 중...\"):\n        time.sleep(2)\n\n    detection_message = generate_detection_message(detection_results)\n    st.session_state.messages.append({\"role\": \"assistant\", \"content\": detection_message})\n    st.chat_message(\"assistant\").write(detection_message)\n\n    st.session_state.show_image = True\n    st.session_state.stage = 3\n    st.rerun()\n\n# 세션 상태 초기화\nif \"stage\" not in st.session_state:\n    st.session_state.stage = 0\nif \"messages\" not in st.session_state:\n    st.session_state.messages = [\n        {\"role\": \"assistant\", \"content\": \"안녕하세요.<br>가방을 눕혀서 올려주세요.\"}\n    ]\nif \"uploaded_image\" not in st.session_state:\n    st.session_state.uploaded_image = None\nif \"show_image\" not in st.session_state:\n    st.session_state.show_image = False\n\n# 메시지 표시\nfor msg in st.session_state.messages:\n    st.chat_message(msg[\"role\"]).markdown(msg[\"content\"], unsafe_allow_html=True)\n\n\nuploaded_file = image_path\n\n# 업로드된 이미지를 화면에 표시\nif st.session_state.stage == 0:\n    if uploaded_file and os.path.exists(uploaded_file):\n        st.session_state.uploaded_image = uploaded_file\n\n    if st.button('Start Scanning'):\n        st.session_state.messages.append({\"role\": \"assistant\", \"content\": \"스캔을 시작합니다. 잠시만 기다려 주세요...\"})\n        st.chat_message(\"assistant\").write(\"스캔을 시작합니다. 잠시만 기다려 주세요...\")\n        with st.spinner(\"스캔 중...\"):\n            time.sleep(5)\n        st.session_state.stage = 1\n        st.rerun()\n    elif not os.path.exists(uploaded_file):\n        st.error(f\"Error: The file at {uploaded_file} does not exist.\")\n\nelif st.session_state.stage == 1:\n    st.session_state.messages.append({\"role\": \"assistant\", \"content\": \"스캔이 완료되었습니다. 결과를 확인하세요.\"})\n    st.chat_message(\"assistant\").write(\"스캔이 완료되었습니다. 결과를 확인하세요.\")\n    st.session_state.stage = 2\n    st.rerun()\n\nelif st.session_state.stage == 2:\n    if st.button('No Detection'):\n        handle_no_detection()\n\n    if st.button('Objects Detected'):\n        handle_objects_detected()\n\nelif st.session_state.stage == 3:\n    if st.session_state.show_image:\n        if os.path.exists(st.session_state.uploaded_image):\n            st.image(st.session_state.uploaded_image, caption='Detected Objects', use_column_width=True)\n        else:\n            st.error(f\"Error: The file at {st.session_state.uploaded_image} does not exist.\")\n\n    if st.button('Retry Scanning'):\n        st.session_state.messages.append({\"role\": \"user\", \"content\": \"Retry Scanning\"})\n        st.session_state.messages.append({\"role\": \"assistant\", \"content\": \"다시 스캔을 시작합니다. 잠시만 기다려 주세요...\"})\n        st.chat_message(\"assistant\").write(\"다시 스캔을 시작합니다. 잠시만 기다려 주세요...\")\n        with st.spinner(\"스캔 중...\"):\n            time.sleep(5)\n        st.session_state.stage = 1\n        st.experimental_rerun()\n\n    if st.button('Complete'):\n        st.session_state.stage = 4\n        st.rerun()\n\nelif st.session_state.stage == 4:\n    st.session_state.messages.append({\"role\": \"assistant\", \"content\": \"확인을 완료했습니다. 감사합니다.\"})\n    st.chat_message(\"assistant\").write(\"확인을 완료했습니다. 감사합니다.\")\n    if st.button('Retry Scanning'):\n        st.session_state.messages.append({\"role\": \"user\", \"content\": \"Retry Scanning\"})\n        st.session_state.messages.append({\"role\": \"assistant\", \"content\": \"다시 스캔을 시작합니다. 잠시만 기다려 주세요...\"})\n        st.chat_message(\"assistant\").write(\"다시 스캔을 시작합니다. 잠시만 기다려 주세요...\")\n        with st.spinner(\"스캔 중...\"):\n            time.sleep(5)\n        st.session_state.stage = 1\n        st.experimental_rerun()\n    if st.button('Complete'):\n        st.session_state.messages.append({\"role\": \"user\", \"content\": \"Complete\"})\n        st.session_state.messages.append({\"role\": \"assistant\", \"content\": \"확인을 완료했습니다. 감사합니다.\"})\n        st.chat_message(\"assistant\").write(\"확인을 완료했습니다. 감사합니다.\")\n\ndef main():\n    pass\n\nif __name__ == '__main__':\n    main()\n","undoManager":{"mark":-1,"position":-1,"stack":[]},"ace":{"folds":[],"scrolltop":1615,"scrollleft":0,"selection":{"start":{"row":0,"column":0},"end":{"row":0,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":99,"state":"start","mode":"ace/mode/python"}},"timestamp":1716472591217}