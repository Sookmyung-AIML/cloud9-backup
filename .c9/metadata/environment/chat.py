{"filter":false,"title":"chat.py","tooltip":"/chat.py","undoManager":{"mark":0,"position":0,"stack":[[{"start":{"row":0,"column":0},"end":{"row":165,"column":10},"action":"insert","lines":["import streamlit as st","import time","from PIL import Image","import os","","st.title(\"💬 AI SERVICE\")","","# 이미지 경로 설정 (절대 경로)","image_path = '/home/ubuntu/environment/.c9/xmen-chatbot/2024032609093515_aug0_lr.png'","","detection_results = {","    \"index\": \"dsfdfsdf\",","    \"UserID\": \"001\",","    \"s3\": \"....\",","    \"objects\": [","        {","            \"type\": \"SSD\",","            \"position\": [2, 0, 0, 1],","            \"amount\": 3","        },","        {","            \"type\": \"USB\",","            \"position\": [0, 0, 1, 0],","            \"amount\": 1","        }","    ]","}","","# 탐지 위치를 텍스트로 변환","def get_position_text(positions):","    position_texts = []","    if positions[0] > 0:","        position_texts.append(f\"왼쪽 상단에 {positions[0]}개\")","    if positions[1] > 0:","        position_texts.append(f\"오른쪽 상단에 {positions[1]}개\")","    if positions[2] > 0:","        position_texts.append(f\"왼쪽 하단에 {positions[2]}개\")","    if positions[3] > 0:","        position_texts.append(f\"오른쪽 하단에 {positions[3]}개\")","    return \", \".join(position_texts)","","# 탐지된 물체 메시지를 생성","def generate_detection_message(detection_results):","    total_objects = sum([obj[\"amount\"] for obj in detection_results[\"objects\"]])","    detection_message = f\"총 {total_objects}개의 물품이 탐지되었습니다.\\n\"","    for obj in detection_results[\"objects\"]:","        detection_message += f\"<br>{obj['type']}가 {obj['amount']}개 탐지되었습니다.\\n\"","        position_text = get_position_text(obj[\"position\"])","        detection_message += f\"<br>{obj['type']}는 {position_text}로 예상됩니다.\\n\"","    return detection_message","","# 탐지 안 됐을 때","def handle_no_detection():","    st.session_state.messages.append({\"role\": \"user\", \"content\": \"No Detection\"})","    st.session_state.messages.append(","        {\"role\": \"assistant\", \"content\": \"물체가 제대로 탐지되지 않았습니다. 가방을 흔들어서 다시 올려주세요.\"}","    )","    st.chat_message(\"assistant\").write(\"물체가 제대로 탐지되지 않았습니다. 가방을 흔들어서 다시 올려주세요.\")","    st.session_state.stage = 3","    st.rerun()","","# 탐지 됐을 때","def handle_objects_detected():","    st.session_state.messages.append({\"role\": \"user\", \"content\": \"Objects Detected\"})","    st.session_state.messages.append({\"role\": \"assistant\", \"content\": \"스캔이 완료되었습니다. 탐지된 물체를 확인합니다...\"})","    st.chat_message(\"assistant\").write(\"스캔이 완료되었습니다. 탐지된 물체를 확인합니다...\")","    with st.spinner(\"확인 중...\"):","        time.sleep(2)","","    detection_message = generate_detection_message(detection_results)","    st.session_state.messages.append({\"role\": \"assistant\", \"content\": detection_message})","    st.chat_message(\"assistant\").write(detection_message)","","    # 탐지된 이미지 표시를 위한 플래그 설정","    st.session_state.show_image = True","    st.session_state.stage = 3","    st.rerun()","","# 세션 상태 초기화","if \"stage\" not in st.session_state:","    st.session_state.stage = 0","if \"messages\" not in st.session_state:","    st.session_state.messages = [","        {\"role\": \"assistant\", \"content\": \"안녕하세요.<br>가방을 눕혀서 올려주세요.\"}","    ]","if \"uploaded_image\" not in st.session_state:","    st.session_state.uploaded_image = None","if \"show_image\" not in st.session_state:","    st.session_state.show_image = False","","# 메시지 표시","for msg in st.session_state.messages:","    st.chat_message(msg[\"role\"]).markdown(msg[\"content\"], unsafe_allow_html=True)","","# 이미지 경로 설정","uploaded_file = image_path","","# 업로드된 이미지를 화면에 표시","if st.session_state.stage == 0:","    if uploaded_file and os.path.exists(uploaded_file):","        st.session_state.uploaded_image = uploaded_file","","    if st.button('Start Scanning'):","        st.session_state.messages.append({\"role\": \"assistant\", \"content\": \"스캔을 시작합니다. 잠시만 기다려 주세요...\"})","        st.chat_message(\"assistant\").write(\"스캔을 시작합니다. 잠시만 기다려 주세요...\")","        with st.spinner(\"스캔 중...\"):","            time.sleep(5)","        st.session_state.stage = 1","        st.rerun()","    elif not os.path.exists(uploaded_file):","        st.error(f\"Error: The file at {uploaded_file} does not exist.\")","","elif st.session_state.stage == 1:","    st.session_state.messages.append({\"role\": \"assistant\", \"content\": \"스캔이 완료되었습니다. 결과를 확인하세요.\"})","    st.chat_message(\"assistant\").write(\"스캔이 완료되었습니다. 결과를 확인하세요.\")","    st.session_state.stage = 2","    st.rerun()","","elif st.session_state.stage == 2:","    if st.button('No Detection'):","        handle_no_detection()","","    if st.button('Objects Detected'):","        handle_objects_detected()","","elif st.session_state.stage == 3:","    if st.session_state.show_image:","        if os.path.exists(st.session_state.uploaded_image):","            st.image(st.session_state.uploaded_image, caption='Detected Objects', use_column_width=True)","        else:","            st.error(f\"Error: The file at {st.session_state.uploaded_image} does not exist.\")","","    if st.button('Retry Scanning'):","        st.session_state.messages.append({\"role\": \"user\", \"content\": \"Retry Scanning\"})","        st.session_state.messages.append({\"role\": \"assistant\", \"content\": \"다시 스캔을 시작합니다. 잠시만 기다려 주세요...\"})","        st.chat_message(\"assistant\").write(\"다시 스캔을 시작합니다. 잠시만 기다려 주세요...\")","        with st.spinner(\"스캔 중...\"):","            time.sleep(5)","        st.session_state.stage = 1","        st.experimental_rerun()","","    if st.button('Complete'):","        st.session_state.stage = 4","        st.rerun()","","elif st.session_state.stage == 4:","    st.session_state.messages.append({\"role\": \"assistant\", \"content\": \"확인을 완료했습니다. 감사합니다.\"})","    st.chat_message(\"assistant\").write(\"확인을 완료했습니다. 감사합니다.\")","    if st.button('Retry Scanning'):","        st.session_state.messages.append({\"role\": \"user\", \"content\": \"Retry Scanning\"})","        st.session_state.messages.append({\"role\": \"assistant\", \"content\": \"다시 스캔을 시작합니다. 잠시만 기다려 주세요...\"})","        st.chat_message(\"assistant\").write(\"다시 스캔을 시작합니다. 잠시만 기다려 주세요...\")","        with st.spinner(\"스캔 중...\"):","            time.sleep(5)","        st.session_state.stage = 1","        st.experimental_rerun()","    if st.button('Complete'):","        st.session_state.messages.append({\"role\": \"user\", \"content\": \"Complete\"})","        st.session_state.messages.append({\"role\": \"assistant\", \"content\": \"확인을 완료했습니다. 감사합니다.\"})","        st.chat_message(\"assistant\").write(\"확인을 완료했습니다. 감사합니다.\")","","def main():","    pass","","if __name__ == '__main__':","    main()"],"id":1}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":99,"column":17},"end":{"row":99,"column":17},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1716353520578,"hash":"e7b06831276b172c237aa389169f8b14ab2dbee8"}